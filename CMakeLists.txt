CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(autojsoncxx)

# Fill free to provide correct version information here
SET(LIB_MAJOR_VERSION "0")
SET(LIB_MINOR_VERSION "1")
SET(LIB_PATCH_VERSION "0")
set(LIB_VERSION_STRING "${LIB_MAJOR_VERSION}.${LIB_MINOR_VERSION}.${LIB_PATCH_VERSION}")

# Perform tests
enable_testing()
ADD_SUBDIRECTORY(test)

# Header installation
INSTALL(
    DIRECTORY include/
    DESTINATION include
    COMPONENT dev
    )

INSTALL(
    PROGRAMS ${PROJECT_SOURCE_DIR}/autojsoncxx.py
    DESTINATION bin
    COMPONENT dev
    )

INSTALL(
    PROGRAMS ${PROJECT_SOURCE_DIR}/code_template
    DESTINATION share
    COMPONENT dev
    )

# Simplified debianization
if (UNIX)

    # Set build environment
    SET(CPACK_COMPONENTS_ALL dev)
    SET(CPACK_GENERATOR "TGZ;DEB")
    SET(CPACK_SOURCE_TGZ "ON")
    SET(CPACK_DEB_COMPONENT_INSTALL 1)

    # Common package information
    SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY
        "A header-only library and a code generator to automagically translate between JSON and C++ types")
    SET(CPACK_DEBIAN_PACKAGE_HOMEPAGE "https://github.com/netheril96/autojsoncxx")
    SET(CPACK_DEBIAN_PACKAGE_MAINTAINER "Vitaly Isaev <vitalyisaev2@gmail.com>")
    SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "all")

    # Versioning
    SET(CPACK_PACKAGE_VERSION_MAJOR ${LIB_MAJOR_VERSION})
    SET(CPACK_PACKAGE_VERSION_MINOR ${LIB_MINOR_VERSION})
    SET(CPACK_PACKAGE_VERSION_PATCH ${LIB_PATCH_VERSION})
    SET(CPACK_PACKAGE_VERSION ${LIB_VERSION_STRING})

    # Package name
    SET(CPACK_DEBIAN_PACKAGE_NAME ${CMAKE_PROJECT_NAME})
    SET(CPACK_RESOURCE_FILE_LICENSE ${CMAKE_SOURCE_DIR}/LICENSE)
    EXEC_PROGRAM("/bin/date +%Y%m%d" OUTPUT_VARIABLE DATE)
    SET(CPACK_DEBIAN_PACKAGE_VERSION "${LIB_VERSION_STRING}~git${DATE}-1")
    SET(CPACK_PACKAGE_FILE_NAME 
        "${CPACK_DEBIAN_PACKAGE_NAME}${CPACK_DEBIAN_PACKAGE_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE}")

endif(UNIX)
 
INCLUDE(CPack)
